{"ast":null,"code":"import api from './api';\nexport const movementsService = {\n  async getMovements(params) {\n    const response = await api.get('/movements', {\n      params\n    });\n    return response.data;\n  },\n  async createMovement(data) {\n    const response = await api.post('/movements', data);\n    return response.data;\n  },\n  async getReservations(params) {\n    const response = await api.get('/movements/reservations', {\n      params\n    });\n    return response.data;\n  },\n  async createReservation(data) {\n    const response = await api.post('/movements/reservations', data);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","movementsService","getMovements","params","response","get","data","createMovement","post","getReservations","createReservation"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/services/movements.service.ts"],"sourcesContent":["import api from './api';\nimport { Movement, Reservation } from '../types';\n\nexport const movementsService = {\n  async getMovements(params?: {\n    component_id?: string;\n    movement_type_id?: string;\n    start_date?: string;\n    end_date?: string;\n  }): Promise<{ movements: Movement[] }> {\n    const response = await api.get<{ movements: Movement[] }>('/movements', {\n      params,\n    });\n    return response.data;\n  },\n\n  async createMovement(data: {\n    movement_type_id: string;\n    component_id: string;\n    quantity: number;\n    unit_cost?: number;\n    reference_number?: string;\n    notes?: string;\n    recipe_id?: string;\n  }): Promise<{\n    message: string;\n    movement: Movement;\n    newStock: number;\n    newReservedStock: number;\n  }> {\n    const response = await api.post<{\n      message: string;\n      movement: Movement;\n      newStock: number;\n      newReservedStock: number;\n    }>('/movements', data);\n    return response.data;\n  },\n\n  async getReservations(params?: {\n    component_id?: string;\n    status?: string;\n  }): Promise<{ reservations: Reservation[] }> {\n    const response = await api.get<{ reservations: Reservation[] }>(\n      '/movements/reservations',\n      { params }\n    );\n    return response.data;\n  },\n\n  async createReservation(data: {\n    component_id: string;\n    quantity: number;\n    reference?: string;\n    notes?: string;\n    expires_at?: string;\n  }): Promise<{\n    message: string;\n    reservation: Reservation;\n  }> {\n    const response = await api.post<{\n      message: string;\n      reservation: Reservation;\n    }>('/movements/reservations', data);\n    return response.data;\n  },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,gBAAgB,GAAG;EAC9B,MAAMC,YAAYA,CAACC,MAKlB,EAAsC;IACrC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAA4B,YAAY,EAAE;MACtEF;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,cAAcA,CAACD,IAQpB,EAKE;IACD,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,IAAI,CAK5B,YAAY,EAAEF,IAAI,CAAC;IACtB,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,eAAeA,CAACN,MAGrB,EAA4C;IAC3C,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAC5B,yBAAyB,EACzB;MAAEF;IAAO,CACX,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMI,iBAAiBA,CAACJ,IAMvB,EAGE;IACD,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,IAAI,CAG5B,yBAAyB,EAAEF,IAAI,CAAC;IACnC,OAAOF,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}