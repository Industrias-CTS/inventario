{"ast":null,"code":"import api from './api';\nexport const componentsService = {\n  async getComponents(params) {\n    const response = await api.get('/components', {\n      params\n    });\n    return response.data;\n  },\n  async getComponentById(id) {\n    const response = await api.get(`/components/${id}`);\n    return response.data;\n  },\n  async createComponent(data) {\n    const response = await api.post('/components', data);\n    return response.data;\n  },\n  async updateComponent(id, data) {\n    const response = await api.put(`/components/${id}`, data);\n    return response.data;\n  },\n  async deleteComponent(id) {\n    const response = await api.delete(`/components/${id}`);\n    return response.data;\n  },\n  async getComponentStock(id) {\n    const response = await api.get(`/components/${id}/stock`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","componentsService","getComponents","params","response","get","data","getComponentById","id","createComponent","post","updateComponent","put","deleteComponent","delete","getComponentStock"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/services/components.service.ts"],"sourcesContent":["import api from './api';\nimport { Component, StockInfo } from '../types';\n\nexport const componentsService = {\n  async getComponents(params?: {\n    category_id?: string;\n    is_active?: boolean;\n    search?: string;\n  }): Promise<{ components: Component[] }> {\n    const response = await api.get<{ components: Component[] }>('/components', {\n      params,\n    });\n    return response.data;\n  },\n\n  async getComponentById(id: string): Promise<{ component: Component }> {\n    const response = await api.get<{ component: Component }>(`/components/${id}`);\n    return response.data;\n  },\n\n  async createComponent(data: Partial<Component>): Promise<{\n    message: string;\n    component: Component;\n  }> {\n    const response = await api.post<{\n      message: string;\n      component: Component;\n    }>('/components', data);\n    return response.data;\n  },\n\n  async updateComponent(\n    id: string,\n    data: Partial<Component>\n  ): Promise<{\n    message: string;\n    component: Component;\n  }> {\n    const response = await api.put<{\n      message: string;\n      component: Component;\n    }>(`/components/${id}`, data);\n    return response.data;\n  },\n\n  async deleteComponent(id: string): Promise<{\n    message: string;\n    component: Component;\n  }> {\n    const response = await api.delete<{\n      message: string;\n      component: Component;\n    }>(`/components/${id}`);\n    return response.data;\n  },\n\n  async getComponentStock(id: string): Promise<{ stock: StockInfo }> {\n    const response = await api.get<{ stock: StockInfo }>(`/components/${id}/stock`);\n    return response.data;\n  },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,iBAAiB,GAAG;EAC/B,MAAMC,aAAaA,CAACC,MAInB,EAAwC;IACvC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAA8B,aAAa,EAAE;MACzEF;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,gBAAgBA,CAACC,EAAU,EAAqC;IACpE,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAA2B,eAAeG,EAAE,EAAE,CAAC;IAC7E,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,eAAeA,CAACH,IAAwB,EAG3C;IACD,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACU,IAAI,CAG5B,aAAa,EAAEJ,IAAI,CAAC;IACvB,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMK,eAAeA,CACnBH,EAAU,EACVF,IAAwB,EAIvB;IACD,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACY,GAAG,CAG3B,eAAeJ,EAAE,EAAE,EAAEF,IAAI,CAAC;IAC7B,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMO,eAAeA,CAACL,EAAU,EAG7B;IACD,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACc,MAAM,CAG9B,eAAeN,EAAE,EAAE,CAAC;IACvB,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMS,iBAAiBA,CAACP,EAAU,EAAiC;IACjE,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAuB,eAAeG,EAAE,QAAQ,CAAC;IAC/E,OAAOJ,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}