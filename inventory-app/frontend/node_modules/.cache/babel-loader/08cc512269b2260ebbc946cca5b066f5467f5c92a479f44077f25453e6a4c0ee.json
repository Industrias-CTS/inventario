{"ast":null,"code":"import api from'./api';export const movementsService={async getMovements(params){const response=await api.get('/movements',{params});return response.data;},async createMovement(data){const response=await api.post('/movements',data);return response.data;},async getReservations(params){const response=await api.get('/movements/reservations',{params});return response.data;},async createReservation(data){const response=await api.post('/movements/reservations',data);return response.data;}};","map":{"version":3,"names":["api","movementsService","getMovements","params","response","get","data","createMovement","post","getReservations","createReservation"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/services/movements.service.ts"],"sourcesContent":["import api from './api';\nimport { Movement, Reservation } from '../types';\n\nexport const movementsService = {\n  async getMovements(params?: {\n    component_id?: string;\n    movement_type_id?: string;\n    start_date?: string;\n    end_date?: string;\n  }): Promise<{ movements: Movement[] }> {\n    const response = await api.get<{ movements: Movement[] }>('/movements', {\n      params,\n    });\n    return response.data;\n  },\n\n  async createMovement(data: {\n    movement_type_id: string;\n    component_id: string;\n    quantity: number;\n    unit_cost?: number;\n    reference_number?: string;\n    notes?: string;\n    recipe_id?: string;\n  }): Promise<{\n    message: string;\n    movement: Movement;\n    newStock: number;\n    newReservedStock: number;\n  }> {\n    const response = await api.post<{\n      message: string;\n      movement: Movement;\n      newStock: number;\n      newReservedStock: number;\n    }>('/movements', data);\n    return response.data;\n  },\n\n  async getReservations(params?: {\n    component_id?: string;\n    status?: string;\n  }): Promise<{ reservations: Reservation[] }> {\n    const response = await api.get<{ reservations: Reservation[] }>(\n      '/movements/reservations',\n      { params }\n    );\n    return response.data;\n  },\n\n  async createReservation(data: {\n    component_id: string;\n    quantity: number;\n    reference?: string;\n    notes?: string;\n    expires_at?: string;\n  }): Promise<{\n    message: string;\n    reservation: Reservation;\n  }> {\n    const response = await api.post<{\n      message: string;\n      reservation: Reservation;\n    }>('/movements/reservations', data);\n    return response.data;\n  },\n};"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAGvB,MAAO,MAAM,CAAAC,gBAAgB,CAAG,CAC9B,KAAM,CAAAC,YAAYA,CAACC,MAKlB,CAAsC,CACrC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAA4B,YAAY,CAAE,CACtEF,MACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAC,cAAcA,CAACD,IAQpB,CAKE,CACD,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACQ,IAAI,CAK5B,YAAY,CAAEF,IAAI,CAAC,CACtB,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAG,eAAeA,CAACN,MAGrB,CAA4C,CAC3C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAC5B,yBAAyB,CACzB,CAAEF,MAAO,CACX,CAAC,CACD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAI,iBAAiBA,CAACJ,IAMvB,CAGE,CACD,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACQ,IAAI,CAG5B,yBAAyB,CAAEF,IAAI,CAAC,CACnC,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}