{"ast":null,"code":"import api from './api';\nexport const authService = {\n  async login(username, password) {\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  async register(userData) {\n    const response = await api.post('/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    return response.data;\n  },\n  async getProfile() {\n    const response = await api.get('/auth/profile');\n    return response.data;\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser() {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      try {\n        return JSON.parse(userStr);\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n};","map":{"version":3,"names":["api","authService","login","username","password","response","post","data","token","localStorage","setItem","JSON","stringify","user","register","userData","getProfile","get","logout","removeItem","getCurrentUser","userStr","getItem","parse","getToken","isAuthenticated"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/services/auth.service.ts"],"sourcesContent":["import api from './api';\nimport { AuthResponse, User } from '@/types';\n\nexport const authService = {\n  async login(username: string, password: string): Promise<AuthResponse> {\n    const response = await api.post<AuthResponse>('/auth/login', {\n      username,\n      password,\n    });\n    \n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    \n    return response.data;\n  },\n\n  async register(userData: {\n    username: string;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n  }): Promise<AuthResponse> {\n    const response = await api.post<AuthResponse>('/auth/register', userData);\n    \n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n    }\n    \n    return response.data;\n  },\n\n  async getProfile(): Promise<{ user: User }> {\n    const response = await api.get<{ user: User }>('/auth/profile');\n    return response.data;\n  },\n\n  logout(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser(): User | null {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      try {\n        return JSON.parse(userStr);\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  },\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  },\n\n  isAuthenticated(): boolean {\n    return !!this.getToken();\n  },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB,EAAyB;IACrE,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAe,aAAa,EAAE;MAC3DH,QAAQ;MACRC;IACF,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;IAClE;IAEA,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMO,QAAQA,CAACC,QAMd,EAAyB;IACxB,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAe,gBAAgB,EAAES,QAAQ,CAAC;IAEzE,IAAIV,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC;IAClE;IAEA,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMS,UAAUA,CAAA,EAA4B;IAC1C,MAAMX,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAiB,eAAe,CAAC;IAC/D,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDW,MAAMA,CAAA,EAAS;IACbT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAcA,CAAA,EAAgB;IAC5B,MAAMC,OAAO,GAAGZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAID,OAAO,EAAE;MACX,IAAI;QACF,OAAOV,IAAI,CAACY,KAAK,CAACF,OAAO,CAAC;MAC5B,CAAC,CAAC,MAAM;QACN,OAAO,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAEDG,QAAQA,CAAA,EAAkB;IACxB,OAAOf,YAAY,CAACa,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;EAEDG,eAAeA,CAAA,EAAY;IACzB,OAAO,CAAC,CAAC,IAAI,CAACD,QAAQ,CAAC,CAAC;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}