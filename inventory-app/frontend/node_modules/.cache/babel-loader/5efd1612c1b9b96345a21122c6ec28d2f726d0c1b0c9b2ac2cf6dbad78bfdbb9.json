{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariana\\\\Documents\\\\Inventario v1\\\\inventory-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '@/services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const currentUser = authService.getCurrentUser();\n        if (currentUser && authService.isAuthenticated()) {\n          const {\n            user: updatedUser\n          } = await authService.getProfile();\n          setUser(updatedUser);\n        }\n      } catch (error) {\n        authService.logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async (username, password) => {\n    const response = await authService.login(username, password);\n    setUser(response.user);\n  };\n  const register = async userData => {\n    const response = await authService.register(userData);\n    setUser(response.user);\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initAuth","currentUser","getCurrentUser","isAuthenticated","updatedUser","getProfile","error","logout","login","username","password","response","register","userData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '@/types';\nimport { authService } from '@/services/auth.service';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (userData: {\n    username: string;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n  }) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const currentUser = authService.getCurrentUser();\n        if (currentUser && authService.isAuthenticated()) {\n          const { user: updatedUser } = await authService.getProfile();\n          setUser(updatedUser);\n        }\n      } catch (error) {\n        authService.logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    const response = await authService.login(username, password);\n    setUser(response.user);\n  };\n\n  const register = async (userData: {\n    username: string;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n  }) => {\n    const response = await authService.register(userData);\n    setUser(response.user);\n  };\n\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAExF,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBtD,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAYpB,OAAO,MAAMI,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,WAAW,GAAGjB,WAAW,CAACkB,cAAc,CAAC,CAAC;QAChD,IAAID,WAAW,IAAIjB,WAAW,CAACmB,eAAe,CAAC,CAAC,EAAE;UAChD,MAAM;YAAEP,IAAI,EAAEQ;UAAY,CAAC,GAAG,MAAMpB,WAAW,CAACqB,UAAU,CAAC,CAAC;UAC5DR,OAAO,CAACO,WAAW,CAAC;QACtB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdtB,WAAW,CAACuB,MAAM,CAAC,CAAC;MACtB,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAAK;IAC1D,MAAMC,QAAQ,GAAG,MAAM3B,WAAW,CAACwB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IAC5Db,OAAO,CAACc,QAAQ,CAACf,IAAI,CAAC;EACxB,CAAC;EAED,MAAMgB,QAAQ,GAAG,MAAOC,QAMvB,IAAK;IACJ,MAAMF,QAAQ,GAAG,MAAM3B,WAAW,CAAC4B,QAAQ,CAACC,QAAQ,CAAC;IACrDhB,OAAO,CAACc,QAAQ,CAACf,IAAI,CAAC;EACxB,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBvB,WAAW,CAACuB,MAAM,CAAC,CAAC;IACpBV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMiB,KAAK,GAAG;IACZlB,IAAI;IACJE,OAAO;IACPU,KAAK;IACLI,QAAQ;IACRL,MAAM;IACNJ,eAAe,EAAE,CAAC,CAACP;EACrB,CAAC;EAED,oBAAOV,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAAEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACxB,GAAA,CArDWF,YAAyC;AAAA2B,EAAA,GAAzC3B,YAAyC;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}