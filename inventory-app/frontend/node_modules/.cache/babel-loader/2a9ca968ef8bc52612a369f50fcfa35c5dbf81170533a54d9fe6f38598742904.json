{"ast":null,"code":"import api from'./api';export const componentsService={async getComponents(params){const response=await api.get('/components',{params});return response.data;},async getComponentById(id){const response=await api.get(`/components/${id}`);return response.data;},async createComponent(data){const response=await api.post('/components',data);return response.data;},async updateComponent(id,data){const response=await api.put(`/components/${id}`,data);return response.data;},async deleteComponent(id){const response=await api.delete(`/components/${id}`);return response.data;},async getComponentStock(id){const response=await api.get(`/components/${id}/stock`);return response.data;}};","map":{"version":3,"names":["api","componentsService","getComponents","params","response","get","data","getComponentById","id","createComponent","post","updateComponent","put","deleteComponent","delete","getComponentStock"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/services/components.service.ts"],"sourcesContent":["import api from './api';\nimport { Component, StockInfo } from '../types';\n\nexport const componentsService = {\n  async getComponents(params?: {\n    category_id?: string;\n    is_active?: boolean;\n    search?: string;\n  }): Promise<{ components: Component[] }> {\n    const response = await api.get<{ components: Component[] }>('/components', {\n      params,\n    });\n    return response.data;\n  },\n\n  async getComponentById(id: string): Promise<{ component: Component }> {\n    const response = await api.get<{ component: Component }>(`/components/${id}`);\n    return response.data;\n  },\n\n  async createComponent(data: Partial<Component>): Promise<{\n    message: string;\n    component: Component;\n  }> {\n    const response = await api.post<{\n      message: string;\n      component: Component;\n    }>('/components', data);\n    return response.data;\n  },\n\n  async updateComponent(\n    id: string,\n    data: Partial<Component>\n  ): Promise<{\n    message: string;\n    component: Component;\n  }> {\n    const response = await api.put<{\n      message: string;\n      component: Component;\n    }>(`/components/${id}`, data);\n    return response.data;\n  },\n\n  async deleteComponent(id: string): Promise<{\n    message: string;\n    component: Component;\n  }> {\n    const response = await api.delete<{\n      message: string;\n      component: Component;\n    }>(`/components/${id}`);\n    return response.data;\n  },\n\n  async getComponentStock(id: string): Promise<{ stock: StockInfo }> {\n    const response = await api.get<{ stock: StockInfo }>(`/components/${id}/stock`);\n    return response.data;\n  },\n};"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAGvB,MAAO,MAAM,CAAAC,iBAAiB,CAAG,CAC/B,KAAM,CAAAC,aAAaA,CAACC,MAInB,CAAwC,CACvC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAA8B,aAAa,CAAE,CACzEF,MACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAC,gBAAgBA,CAACC,EAAU,CAAqC,CACpE,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAA2B,eAAeG,EAAE,EAAE,CAAC,CAC7E,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAG,eAAeA,CAACH,IAAwB,CAG3C,CACD,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACU,IAAI,CAG5B,aAAa,CAAEJ,IAAI,CAAC,CACvB,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAK,eAAeA,CACnBH,EAAU,CACVF,IAAwB,CAIvB,CACD,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACY,GAAG,CAG3B,eAAeJ,EAAE,EAAE,CAAEF,IAAI,CAAC,CAC7B,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAO,eAAeA,CAACL,EAAU,CAG7B,CACD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACc,MAAM,CAG9B,eAAeN,EAAE,EAAE,CAAC,CACvB,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,KAAM,CAAAS,iBAAiBA,CAACP,EAAU,CAAiC,CACjE,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAuB,eAAeG,EAAE,QAAQ,CAAC,CAC/E,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}