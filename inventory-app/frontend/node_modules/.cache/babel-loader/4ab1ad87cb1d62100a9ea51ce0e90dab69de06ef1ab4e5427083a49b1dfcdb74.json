{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authService}from'../services/auth.service';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth debe ser usado dentro de un AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initAuth=async()=>{try{const currentUser=authService.getCurrentUser();if(currentUser&&authService.isAuthenticated()){const{user:updatedUser}=await authService.getProfile();setUser(updatedUser);}}catch(error){authService.logout();}finally{setLoading(false);}};initAuth();},[]);const login=async(username,password)=>{const response=await authService.login(username,password);setUser(response.user);};const register=async userData=>{const response=await authService.register(userData);setUser(response.user);};const logout=()=>{authService.logout();setUser(null);};const value={user,loading,login,register,logout,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","initAuth","currentUser","getCurrentUser","isAuthenticated","updatedUser","getProfile","error","logout","login","username","password","response","register","userData","value","Provider"],"sources":["C:/Users/Mariana/Documents/Inventario v1/inventory-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '../types';\nimport { authService } from '../services/auth.service';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (userData: {\n    username: string;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n  }) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const currentUser = authService.getCurrentUser();\n        if (currentUser && authService.isAuthenticated()) {\n          const { user: updatedUser } = await authService.getProfile();\n          setUser(updatedUser);\n        }\n      } catch (error) {\n        authService.logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    const response = await authService.login(username, password);\n    setUser(response.user);\n  };\n\n  const register = async (userData: {\n    username: string;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n  }) => {\n    const response = await authService.register(userData);\n    setUser(response.user);\n  };\n\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CAExF,OAASC,WAAW,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAiBvD,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAA8BQ,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGT,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACG,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,kDAAkD,CAAC,CACrE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAMD,MAAO,MAAM,CAAAE,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF,KAAM,CAAAC,WAAW,CAAGhB,WAAW,CAACiB,cAAc,CAAC,CAAC,CAChD,GAAID,WAAW,EAAIhB,WAAW,CAACkB,eAAe,CAAC,CAAC,CAAE,CAChD,KAAM,CAAEP,IAAI,CAAEQ,WAAY,CAAC,CAAG,KAAM,CAAAnB,WAAW,CAACoB,UAAU,CAAC,CAAC,CAC5DR,OAAO,CAACO,WAAW,CAAC,CACtB,CACF,CAAE,MAAOE,KAAK,CAAE,CACdrB,WAAW,CAACsB,MAAM,CAAC,CAAC,CACtB,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAAK,CAC1D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA1B,WAAW,CAACuB,KAAK,CAACC,QAAQ,CAAEC,QAAQ,CAAC,CAC5Db,OAAO,CAACc,QAAQ,CAACf,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAgB,QAAQ,CAAG,KAAO,CAAAC,QAMvB,EAAK,CACJ,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAA1B,WAAW,CAAC2B,QAAQ,CAACC,QAAQ,CAAC,CACrDhB,OAAO,CAACc,QAAQ,CAACf,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAW,MAAM,CAAGA,CAAA,GAAM,CACnBtB,WAAW,CAACsB,MAAM,CAAC,CAAC,CACpBV,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAiB,KAAK,CAAG,CACZlB,IAAI,CACJE,OAAO,CACPU,KAAK,CACLI,QAAQ,CACRL,MAAM,CACNJ,eAAe,CAAE,CAAC,CAACP,IACrB,CAAC,CAED,mBAAOT,IAAA,CAACC,WAAW,CAAC2B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAnB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}